{"version":3,"sources":["ejercicios/typescript/index.ts"],"names":[],"mappings":"AAAA;AAEA,IAAI,KAAK,GAAY,IAArB;AACA,KAAK,GAAG,KAAR,EAEA;;AACA,IAAI,GAAG,GAAG,CAAV;AACA,IAAI,SAAS,GAAW,EAAxB;AACA,IAAI,WAAW,GAAW,GAA1B;AACA,IAAI,SAAS,GAAG,SAAS,GAAG,WAA5B,EAEA;;AAEA,IAAI,MAAM,GAAW,QAArB;AACA,IAAI,MAAM,GAAG,gBAAc,MAA3B,EAEA;;AAEA,IAAI,MAAM,GAAa,EAAvB;AACA,MAAM,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAAT,EACA;;AAEA,IAAI,gBAAgB,GAA2B,EAA/C;AACA,gBAAgB,CAAC,IAAjB,CAAsB,QAAtB;AACA,gBAAgB,CAAC,IAAjB,CAAsB,IAAtB,GAEA;;AACA,IAAK,KAAL;;AAAA,CAAA,UAAK,KAAL,EAAU;AACR,EAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACD,CAJD,EAAK,KAAK,KAAL,KAAK,GAAA,EAAA,CAAV;;AAMA,IAAI,aAAa,GAAU,KAAK,CAAC,IAAjC;AACA,OAAO,CAAC,GAAR,CAAY,0BAAwB,aAApC,GAEA;;AACA,IAAI,OAAO,GAAQ,OAAnB;AACA,OAAO,GAAG;AAAE,EAAA,IAAI,EAAE;AAAR,CAAV,EAEA;;AACA,IAAI,UAAU,GAAW;AAAE,EAAA,IAAI,EAAE;AAAR,CAAzB,EAEA;;AACA,SAAS,GAAT,CAAa,CAAb,EAAwB,CAAxB,EAAiC;AAC/B,SAAO,CAAC,GAAG,CAAX;AACD;;AAED,IAAM,GAAG,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf;;AAEA,SAAS,WAAT,CAAqB,CAArB,EAA8B;AAC5B,SAAO,UAAS,CAAT,EAAkB;AACvB,WAAO,CAAC,GAAG,CAAX;AACD,GAFD;AAGD;;AAED,IAAM,OAAO,GAAG,WAAW,CAAC,CAAD,CAA3B;AACA,IAAM,QAAQ,GAAG,OAAO,CAAC,CAAD,CAAxB;;AAEA,SAAS,QAAT,CAAkB,SAAlB,EAAqC,QAArC,EAAsD;AACpD,SAAU,SAAS,GAAA,GAAT,GAAa,QAAvB;AACD;;AAED,IAAM,MAAM,GAAG,QAAQ,CAAC,QAAD,EAAW,QAAX,CAAvB;AACA,OAAO,CAAC,GAAR,CAAY,MAAZ;AASA,IAAI,IAAI,GAAc;AACpB,EAAA,KAAK,EAAE,CADa;AAEpB,EAAA,MAAM,EAAE;AAFY,CAAtB;;AAKA,SAAS,QAAT,CAAkB,CAAlB,EAA8B;AAC5B,SAAO,CAAC,CAAC,MAAF,GAAW,CAAC,CAAC,KAApB;AACD;;AAED,IAAM,QAAQ,GAAG,QAAQ,CAAC,IAAD,CAAzB;AACA,OAAO,CAAC,GAAR,CAAY,QAAZ;;AAEA,IAAI,CAAC,QAAL,GAAgB,YAAA;AACd,SAAO,2BAAyB,KAAK,KAA9B,GAAmC,eAAnC,GAAmD,KAAK,MAA/D;AACD,CAFD;;AAIA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,QAAL,EAAZ","file":"typescript.72c601f0.js","sourceRoot":"..","sourcesContent":["// Boolean\n\nlet muted: boolean = true;\nmuted = false;\n\n// Numeros\nlet age = 6;\nlet numerador: number = 42;\nlet denominador: number = age;\nlet resultado = numerador / denominador;\n\n// String\n\nlet nombre: string = 'hector';\nlet saludo = `My name is ${nombre}`;\n\n// Arreglos\n\nlet people: string[] = [];\npeople = ['isable', 'nicole', 'raul'];\n// people.push(9000);\n\nlet peopleAndNumbers: Array<string | number> = [];\npeopleAndNumbers.push('Hector');\npeopleAndNumbers.push(9000);\n\n// Enum\nenum Color {\n  Rojo,\n  Verde,\n  Azul\n}\n\nlet colorFavorito: Color = Color.Azul;\nconsole.log(`My favorito color is ${colorFavorito}`);\n\n// Any\nlet comodin: any = 'Joker';\ncomodin = { type: 'Wildcard' };\n\n// Object\nlet someObject: object = { type: 'Wildcard' };\n\n// Functions\nfunction add(a: number, b: number): number {\n  return a + b;\n}\n\nconst sum = add(4, 6);\n\nfunction createAdder(a: number): (number) => number {\n  return function(b: number) {\n    return b + a;\n  };\n}\n\nconst addFour = createAdder(4);\nconst fourPlus = addFour(6);\n\nfunction fullName(firstName: string, lastName?: string): string {\n  return `${firstName} ${lastName}`;\n}\n\nconst hector = fullName('Hector', 'Flores');\nconsole.log(hector);\n\n// Interfaces\n\ninterface Rectangle {\n  width: number;\n  height: number;\n}\n\nlet rect: Rectangle = {\n  width: 4,\n  height: 6\n};\n\nfunction calcArea(r: Rectangle): number {\n  return r.height * r.width;\n}\n\nconst areaRect = calcArea(rect);\nconsole.log(areaRect);\n\nrect.toString = function() {\n  return `Rectangle with width: ${this.width} and height: ${this.height}`;\n};\n\nconsole.log(rect.toString());\n"]}