{"id":"ejercicios/this.html","dependencies":[{"name":"/Users/hflores/platzi/jsc-javascript-professional/.babelrc","includedInParent":true,"mtime":1584917074052},{"name":"/Users/hflores/platzi/jsc-javascript-professional/package.json","includedInParent":true,"mtime":1584917328893}],"generated":{"html":"<html>\n  <head>\n    <title>This</title>\n  </head>\n\n  <body>\n    <a href=\"/ejercicios/\">Go back</a>\n    <p><em>Abre la consola</em></p>\n\n    <h2>\n      this makes reference to an object. That object which it's running a chunk\n      of code.\n    </h2>\n\n    <script src=\"https://unpkg.com/jquery@3.3.1/dist/jquery.js\"></script>\n\n    <script>// this on global scope\nconsole.log(\"this => \", this); // this on function scope\n\nfunction whoIsThis() {\n  return this;\n}\n\nconsole.log(\"whoIsThis => \", whoIsThis()); // this on function scope --- strict mode\n\nfunction whoIsThisStrict() {\n  \"use strict\";\n\n  return this;\n}\n\nconsole.log(\"whoIsThisStrict => \", whoIsThisStrict()); // this on object context\n\nvar person = {\n  name: \"hector \",\n  sayHi: function sayHi() {\n    console.log(\"Hello i'm \".concat(this.name));\n  }\n};\nperson.sayHi(); // this when we extract a function from an object\n\nvar action = person.sayHi;\naction(); // this on class context\n\nfunction Person(name) {\n  // this = {}\n  this.name = name;\n}\n\nPerson.prototype.sayHi = function () {\n  console.log(\"Hello i'm \".concat(this.name));\n};\n\nvar angela = new Person(\"Angela\");\nangela.sayHi();</script>\n  </body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"f0b38e5d6489d05169931ba3ec30b8fc","cacheData":{"env":{}}}