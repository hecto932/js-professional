{"id":"ejercicios/prototype.html","dependencies":[{"name":"/Users/hflores/platzi/jsc-javascript-professional/.babelrc","includedInParent":true,"mtime":1584917074052},{"name":"/Users/hflores/platzi/jsc-javascript-professional/package.json","includedInParent":true,"mtime":1584917328893}],"generated":{"html":"<html>\n  <head>\n    <title>Prototype</title>\n  </head>\n\n  <body>\n    <a href=\"/ejercicios/\">Go back</a>\n    <p><em>Abre la consola</em></p>\n\n    <script>// A COMMON OBJECT\n// const zelda = {\n//   name: \"Zelda\",\n// };\n// zelda.sayHi = function() {\n//   console.log(`Hi, I'm ${this.name}`);\n// };\n// zelda.sayHi();\n// const link = {\n//   name: \"Link\",\n// };\n// link.sayHi = function() {\n//   console.log(`Hi, I'm ${this.name}`);\n// };\n// link.sayHi();\n// BE MORE EFFICIENT\n// function Hero(name) {\n//   const hero = {\n//     name,\n//   };\n//   hero.sayHi = function() {\n//     console.log(`Hi, I'm ${this.name}`);\n//   };\n//   return hero;\n// }\n// const zelda = Hero(\"Zelda\");\n// zelda.sayHi();\n// const link = Hero(\"Link\");\n// link.sayHi(\"Link\");\n// A bit better\n// const heroMethods = {\n//   sayHi: function() {\n//     console.log(`Hi, I'm ${this.name}`);\n//   },\n// };\n// function Hero(name) {\n//   const hero = {\n//     name,\n//   };\n//   hero.sayHi = heroMethods.sayHi;\n//   return hero;\n// }\n// const zelda = Hero(\"Zelda\");\n// zelda.sayHi();\n// const link = Hero(\"Link\");\n// link.sayHi(\"Link\");\n// OBJECT.CREATE\n// const newObject = Object.create(object);\n// const heroMethods = {\n//   sayHi: function() {\n//     console.log(`Hi, I'm ${this.name} and superheroe`);\n//   },\n// };\n// function Hero(name) {\n//   const hero = Object.create(Hero.prototype);\n//   hero.name = name;\n//   return hero;\n// }\n// Hero.prototype.sayHi = function() {\n//   console.log(`Hi, I'm ${this.name} and superheroe`);\n// };\n// const zelda = Hero(\"Zelda\");\n// zelda.sayHi();\n// const link = Hero(\"Link\");\n// link.sayHi(\"Link\");\n// NEW IT'S A TRICK TO CARRY HERO.PROTOTYPE TO OBJECT\nfunction Hero(name) {\n  // const hero = Object.create(Hero.prototype);\n  this.name = name;\n}\n\nHero.prototype.sayHi = function () {\n  console.log(\"New: \".concat(this.name));\n};\n\nvar zelda = new Hero(\"Zelda\");\nzelda.sayHi();\nvar link = new Hero(\"Link\");\nlink.sayHi();</script>\n  </body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"2c20d0be61617f1a6c1df362f8961ab9","cacheData":{"env":{}}}